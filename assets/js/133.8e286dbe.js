(window.webpackJsonp=window.webpackJsonp||[]).push([[133],{494:function(e,t,s){"use strict";s.r(t);var o=s(1),a=Object(o.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"contributing"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#contributing"}},[e._v("#")]),e._v(" Contributing")]),e._v(" "),s("h2",{attrs:{id:"general-guideline"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#general-guideline"}},[e._v("#")]),e._v(" General Guideline")]),e._v(" "),s("p",[e._v("We use Github as a code and issues hosting platform. To report a bug or propose a new feature, please open an issue. For pull requests, we would ask you initially create an issue and then create a pull requests linked to this issue.")]),e._v(" "),s("h2",{attrs:{id:"docs-contribution"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#docs-contribution"}},[e._v("#")]),e._v(" Docs Contribution")]),e._v(" "),s("p",[e._v("We use a flexible documentation system as the docs are generated from:")]),e._v(" "),s("ul",[s("li",[e._v("markdown documents in the "),s("code",[e._v("docs")]),e._v(" directory interpreted by the Jupiter Notebook runner")]),e._v(" "),s("li",[e._v("python scripts in the "),s("code",[e._v("docs")]),e._v(" directory generating references or copying documents from the root directory such as "),s("code",[e._v("README.md")]),e._v(", "),s("code",[e._v("CHANGELOG.md")]),e._v(" etc")])]),e._v(" "),s("p",[e._v("To contribute to the documentation, please check to the corresponding "),s("code",[e._v("docs/name.md|py")]),e._v(" file to understand the source of a document. If it’s a markdown just edit it in-line if it’s a script edit it or find a corresponding document in the root directory.")]),e._v(" "),s("h3",{attrs:{id:"building-process"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#building-process"}},[e._v("#")]),e._v(" Building Process")]),e._v(" "),s("p",[e._v("There are two main "),s("code",[e._v("docs")]),e._v(" directories:")]),e._v(" "),s("ul",[s("li",[e._v("source directory: "),s("code",[e._v("docs")])]),e._v(" "),s("li",[e._v("target directory: "),s("code",[e._v("docs/build")])])]),e._v(" "),s("p",[e._v("To build only one document run:")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[e._v("python scripts/docs.py name\n")])])]),s("p",[e._v("To build the whole documentation:")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[e._v("python scripts/docs.py "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# or make docs")]),e._v("\n")])])]),s("h2",{attrs:{id:"code-contribution"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#code-contribution"}},[e._v("#")]),e._v(" Code Contribution")]),e._v(" "),s("p",[e._v("Frictionless is a Python3.6+ framework, and it uses some basically standard Python tools for the development process:")]),e._v(" "),s("ul",[s("li",[e._v("testing: "),s("code",[e._v("pytest")])]),e._v(" "),s("li",[e._v("linting: "),s("code",[e._v("pylama")])]),e._v(" "),s("li",[e._v("formatting: "),s("code",[e._v("black")])]),e._v(" "),s("li",[e._v("type checking: "),s("code",[e._v("mypy")]),e._v(" (under construction)")])]),e._v(" "),s("p",[e._v("It’s a commonplace but, of course, you need "),s("code",[e._v("git")]),e._v(" to work on the project, also "),s("code",[e._v("make")]),e._v(" is recommended.")]),e._v(" "),s("h3",{attrs:{id:"development-environment"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#development-environment"}},[e._v("#")]),e._v(" Development Environment")]),e._v(" "),s("p",[e._v("After cloning the repository, it’s recommended to create a virtual environment and install the dependencies:")]),e._v(" "),s("blockquote",[s("p",[e._v("it will install a "),s("code",[e._v("git commit")]),e._v(" hook running the tests")])]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[e._v("python3.8 -m venv .python\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("source")]),e._v(" .python/bin/activate\npip "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("install")]),e._v(" wheel\n"),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("make")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("install")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("alias")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"frictionless=python -m frictionless"')]),e._v("\n")])])]),s("p",[e._v("Then you can run various make commands:")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("make docs")]),e._v(" - build the docs")]),e._v(" "),s("li",[s("code",[e._v("make format")]),e._v(" - format source code")]),e._v(" "),s("li",[s("code",[e._v("make install")]),e._v(" - install the dependencies (we did before)")]),e._v(" "),s("li",[s("code",[e._v("make lint")]),e._v(" - lint the project")]),e._v(" "),s("li",[s("code",[e._v("make release")]),e._v(" - release a new version")]),e._v(" "),s("li",[s("code",[e._v("make test")]),e._v(" - run the tests")]),e._v(" "),s("li",[s("code",[e._v("make test-ci")]),e._v(" - run the tests (including integrational)")])]),e._v(" "),s("p",[e._v("Of course, it’s possible and recommended to run underlying commands like "),s("code",[e._v("pytest")]),e._v(" or "),s("code",[e._v("pylama")]),e._v(" to speed up the development process.")]),e._v(" "),s("h2",{attrs:{id:"release-process"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#release-process"}},[e._v("#")]),e._v(" Release Process")]),e._v(" "),s("p",[e._v("To release a new version:")]),e._v(" "),s("ul",[s("li",[e._v("check that you have push access to the "),s("code",[e._v("master")]),e._v(" branch")]),e._v(" "),s("li",[e._v("update "),s("code",[e._v("frictionless/assets/VERSION")]),e._v(" following the SemVer standard")]),e._v(" "),s("li",[e._v("add changes to "),s("code",[e._v("CHANGELOG.md")]),e._v(" if it’s not a patch release (major or micro)")]),e._v(" "),s("li",[e._v("run "),s("code",[e._v("make release")]),e._v(" which create a release commit and tag and push it to Github")]),e._v(" "),s("li",[e._v("an actual release will happen on the Travis CI platform after running the tests")])])])}),[],!1,null,null,null);t.default=a.exports}}]);