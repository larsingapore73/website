(window.webpackJsonp=window.webpackJsonp||[]).push([[140],{501:function(e,a,t){"use strict";t.r(a);var s=t(1),r=Object(s.a)({},(function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"migration-guide"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#migration-guide"}},[e._v("#")]),e._v(" Migration Guide")]),e._v(" "),t("blockquote",[t("p",[e._v("Frictionless Framework requires Python3.6+")])]),e._v(" "),t("p",[e._v("Frictionless is a logical continuation of many currently existing packages:")]),e._v(" "),t("ul",[t("li",[e._v("goodtables")]),e._v(" "),t("li",[e._v("datapackage")]),e._v(" "),t("li",[e._v("tableschema")]),e._v(" "),t("li",[e._v("tableschema-drivers")]),e._v(" "),t("li",[e._v("tabulator")])]),e._v(" "),t("p",[e._v("Although, most of these packages will be supported going forward, you can migrate to Frictionless as it improves many aspects of working with data and metadata.")]),e._v(" "),t("h2",{attrs:{id:"from-goodtables"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#from-goodtables"}},[e._v("#")]),e._v(" From goodtables")]),e._v(" "),t("p",[e._v("Frictionless provides the "),t("code",[e._v("frictionless validate")]),e._v(" function which is in high-level exactly the same as "),t("code",[e._v("goodtables validate")]),e._v(". Also "),t("code",[e._v("frictionless describe")]),e._v(" is an improved version of "),t("code",[e._v("goodtables init")]),e._v(". You instead need to use the "),t("code",[e._v("frictionless")]),e._v(" command instead of the "),t("code",[e._v("goodtables")]),e._v(" command:")]),e._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Before")]),e._v("\n$ goodtables validate table.csv\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# After")]),e._v("\n$ frictionless validate table.csv\n")])])]),t("p",[e._v("The Python interface is also mostly identical:")]),e._v(" "),t("div",{staticClass:"language-py extra-class"},[t("pre",{pre:!0,attrs:{class:"language-py"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Before")]),e._v("\nreport "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" goodtables"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("validate"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'table.csv'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# After")]),e._v("\nreport "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" frictionless"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("validate"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'table.csv'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n")])])]),t("p",[e._v("Please read the following sections and use "),t("code",[e._v("frictionless validate --help")]),e._v(" to learn what is the difference in the options and in report’s properties.")]),e._v(" "),t("h3",{attrs:{id:"validate"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#validate"}},[e._v("#")]),e._v(" Validate")]),e._v(" "),t("ul",[t("li",[e._v("a schema is inferred by default (use “Infer Options” and “Schema Options” to manage)")]),e._v(" "),t("li",[t("code",[e._v("order_fields")]),e._v(" was replaced by "),t("code",[e._v("sync_schema")]),e._v(" (see “Schema Options”)")]),e._v(" "),t("li",[t("code",[e._v("checks")]),e._v(" was replaced by "),t("code",[e._v("pick/skip_errors")]),e._v(" and "),t("code",[e._v("extra_checks")])]),e._v(" "),t("li",[t("code",[e._v("error_limit")]),e._v(" was replaced by "),t("code",[e._v("limit_errors")]),e._v(" (see “Errors Options”)")]),e._v(" "),t("li",[t("code",[e._v("row_limit")]),e._v(" was replaced by "),t("code",[e._v("query")]),e._v(' (see "Table Query)')]),e._v(" "),t("li",[t("code",[e._v("preset")]),e._v(" was replaced by "),t("code",[e._v("source_type")])])]),e._v(" "),t("h3",{attrs:{id:"report"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#report"}},[e._v("#")]),e._v(" Report")]),e._v(" "),t("ul",[t("li",[e._v("all the properties now are camelCased instead of being lower-cased")]),e._v(" "),t("li",[e._v("various error code changes (see “Errors Reference”)")]),e._v(" "),t("li",[e._v("errors now have both row position and row number")]),e._v(" "),t("li",[t("code",[e._v("row-number")]),e._v(" was replaced by "),t("code",[e._v("rowPosition")])]),e._v(" "),t("li",[e._v("high-level "),t("code",[e._v("warnings")]),e._v(" was replaced by "),t("code",[e._v("errors")])])]),e._v(" "),t("h2",{attrs:{id:"from-datapackage"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#from-datapackage"}},[e._v("#")]),e._v(" From datapackage")]),e._v(" "),t("p",[e._v("Frictionless has "),t("code",[e._v("Resource")]),e._v(" and "),t("code",[e._v("Package")]),e._v(" classes which is almost the same as "),t("code",[e._v("datapackage")]),e._v(" has. There are a lot of improvements for working with metadata described in the “Describing Data” guide.")]),e._v(" "),t("div",{staticClass:"language-py extra-class"},[t("pre",{pre:!0,attrs:{class:"language-py"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Before")]),e._v("\nresource "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" datapackage"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("Resource"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'resource.json'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\npackage "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" datapackage"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("Package"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'package.json'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# After")]),e._v("\nresource "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" frictionless"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("Resource"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'resource.json'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\npackage "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" frictionless"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("Package"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'package.json'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n")])])]),t("h3",{attrs:{id:"package"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#package"}},[e._v("#")]),e._v(" Package")]),e._v(" "),t("ul",[t("li",[e._v("added YAML support")]),e._v(" "),t("li",[e._v("the Package object is now a dict")]),e._v(" "),t("li",[e._v("there is no "),t("code",[e._v("package.descriptor")]),e._v(" anymore")]),e._v(" "),t("li",[e._v("it’s now possible to use keyword arguments in the constructor")]),e._v(" "),t("li",[e._v("it’s now possible to use attribute setters to update a package")]),e._v(" "),t("li",[t("code",[e._v("package.save")]),e._v(" is replaced by "),t("code",[e._v("package.to_json")])])]),e._v(" "),t("h3",{attrs:{id:"resource"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#resource"}},[e._v("#")]),e._v(" Resource")]),e._v(" "),t("ul",[t("li",[e._v("added YAML support")]),e._v(" "),t("li",[e._v("the Resource object is now a dict")]),e._v(" "),t("li",[e._v("there is no "),t("code",[e._v("resource.descriptor")]),e._v(" anymore")]),e._v(" "),t("li",[e._v("it’s now possible to use keyword arguments in the constructor")]),e._v(" "),t("li",[e._v("it’s now possible to use attribute setters to update a resource")]),e._v(" "),t("li",[t("code",[e._v("resource.save")]),e._v(" is replaced by "),t("code",[e._v("**resource**.to_json")])]),e._v(" "),t("li",[t("code",[e._v("resource.read")]),e._v(" was replaced by "),t("code",[e._v("resource.read_data/rows")])]),e._v(" "),t("li",[t("code",[e._v("resource.iter")]),e._v(" was replaced by "),t("code",[e._v("resource.stream_data/rows")])]),e._v(" "),t("li",[t("code",[e._v("resource.raw_read")]),e._v(" was replaced by "),t("code",[e._v("resource.read_bytes")])]),e._v(" "),t("li",[t("code",[e._v("resource.raw_iter")]),e._v(" was replaced by "),t("code",[e._v("resource.stream_bytes")])])]),e._v(" "),t("h2",{attrs:{id:"from-tableschema"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#from-tableschema"}},[e._v("#")]),e._v(" From tableschema")]),e._v(" "),t("p",[e._v("Frictionless has "),t("code",[e._v("Schema")]),e._v(" and "),t("code",[e._v("Fields")]),e._v(" classes which is almost the same as "),t("code",[e._v("tableschema")]),e._v(" has. There are a lot of improvements for working with metadata described in the “Describing Data” guide.")]),e._v(" "),t("div",{staticClass:"language-py extra-class"},[t("pre",{pre:!0,attrs:{class:"language-py"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Before")]),e._v("\nschema "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" tableschema"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("Schema"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'schema.json'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\nfield "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" tableschema"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("Field"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'field.json'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# After")]),e._v("\nschema "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" frictionless"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("Schema"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'schema.json'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\nfield "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" frictionless"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("Field"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'field.json'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n")])])]),t("h3",{attrs:{id:"schema"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#schema"}},[e._v("#")]),e._v(" Schema")]),e._v(" "),t("ul",[t("li",[e._v("added YAML support")]),e._v(" "),t("li",[e._v("the Package object is now a dict")]),e._v(" "),t("li",[e._v("there is no "),t("code",[e._v("schema.descriptor")]),e._v(" anymore")]),e._v(" "),t("li",[e._v("it’s now possible to use keyword arguments in the constructor")]),e._v(" "),t("li",[e._v("it’s now possible to use attribute setters to update a schema")]),e._v(" "),t("li",[t("code",[e._v("schema.save")]),e._v(" is replaced by "),t("code",[e._v("schema.to_json")])]),e._v(" "),t("li",[t("code",[e._v("schema.cast_row")]),e._v(" is replaced by "),t("code",[e._v("schema.read_data")])])]),e._v(" "),t("h3",{attrs:{id:"field"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#field"}},[e._v("#")]),e._v(" Field")]),e._v(" "),t("ul",[t("li",[e._v("added YAML support")]),e._v(" "),t("li",[e._v("the Resource object is now a dict")]),e._v(" "),t("li",[e._v("there is no "),t("code",[e._v("resource.descriptor")]),e._v(" anymore")]),e._v(" "),t("li",[e._v("it’s now possible to use keyword arguments in the constructor")]),e._v(" "),t("li",[e._v("it’s now possible to use attribute setters to update a resource")]),e._v(" "),t("li",[t("code",[e._v("field.save")]),e._v(" is replaced by "),t("code",[e._v("field.to_json")])]),e._v(" "),t("li",[t("code",[e._v("field.cast_value")]),e._v(" is replaced by "),t("code",[e._v("field.read_cell")])])]),e._v(" "),t("h2",{attrs:{id:"from-tabulator"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#from-tabulator"}},[e._v("#")]),e._v(" From tabulator")]),e._v(" "),t("p",[e._v("Frictionless has "),t("code",[e._v("Table")]),e._v(" class which is an equivalent of the tabulator’s "),t("code",[e._v("Stream")]),e._v(" class.")]),e._v(" "),t("div",{staticClass:"language-py extra-class"},[t("pre",{pre:!0,attrs:{class:"language-py"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Before")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("with")]),e._v(" tabulator"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("Stream"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'table.csv'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("as")]),e._v(" stream"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("print")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("stream"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("read"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# After")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("with")]),e._v(" frictionless"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("Table"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'table.csv'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("as")]),e._v(" table"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("print")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("table"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("read_rows"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n")])])]),t("h3",{attrs:{id:"table"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#table"}},[e._v("#")]),e._v(" Table")]),e._v(" "),t("ul",[t("li",[e._v("the Table class now always infers "),t("code",[e._v("table.schema")])]),e._v(" "),t("li",[t("code",[e._v("table.read")]),e._v(" was replace by "),t("code",[e._v("table.read_data/rows")])]),e._v(" "),t("li",[t("code",[e._v("table.iter")]),e._v(" was replaced by "),t("code",[e._v("table.data/row_stream")])]),e._v(" "),t("li",[t("code",[e._v("table.hash/size")]),e._v(" was replaced by the "),t("code",[e._v("table.stats")]),e._v(" property")]),e._v(" "),t("li",[e._v("various changes in the constructor options (see “Extracting Data”)")])])])}),[],!1,null,null,null);a.default=r.exports}}]);